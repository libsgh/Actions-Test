name: Docker Test Build
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  setup:
    name: build setup
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.setup.outputs.branch }}
      target: ${{ steps.setup.outputs.target }}
      docker_images: ${{ steps.setup.outputs.docker_images }}
      image_name: "iicm/actions-test:dev"
    steps:
      - name: setup
        id: setup
        run: |
          target='["linux/amd64", "linux/arm64"]'
          list=$(echo ${target} | jq -c)
          echo "target=${list}" >> $GITHUB_OUTPUT
          docker_images='["--amend iicm/actions-test-linux-amd64:dev", "--amend iicm/actions-test-linux-arm64:dev"]'
          di=$(echo ${docker_images} | jq -c)
          echo "docker_images=${di}" >> $GITHUB_OUTPUT
          branch='["main"]'
          b=$(echo ${branch} | jq -c)
          echo "branch=${b}" >> $GITHUB_OUTPUT
  build:
    needs: setup
    strategy:
      matrix:
        target: ${{ fromJson(needs.setup.outputs.target) }}
        branch: ${{ fromJson(needs.setup.outputs.branch) }}
        go-version: [1.20.1]
    name: build
    runs-on: ubuntu-latest
    outputs:
      artifact_name: ${{ steps.artifact.outputs.name }}
    steps:
      - name: Setup Artifact Name
        id: artifact
        run: |
          tar=${{ matrix.target }}
          a=${tar//'/'/'-'}
          echo "name=${a}" >> $GITHUB_OUTPUT
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: ${{ matrix.branch }}
          fetch-depth: 0
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ needs.setup.outputs.image_name }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: iicm
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          build-args: |
            VERSION=${{ github.ref }}
            ARG0=nightly_docker
            APP_NAME=Actions-Test
          tags: iicm/actions-test-${{ steps.artifact.outputs.name }}:dev
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.target }}
          cache-from: type=gha
          cache-to: type=gha
  combine:
    runs-on: ubuntu-latest
    needs:
      - setup
      - build
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: iicm
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Combine two images
        run: |
          echo '${{ needs.setup.outputs.image_name }}'
          echo '${{ needs.setup.outputs.docker_images }}'
          docker manifest create ${{ needs.setup.outputs.image-name }} ${{ needs.setup.outputs.docker_images }}
          docker manifest push ${{ needs.setup.outputs.image_name }}